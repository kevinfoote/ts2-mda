<?xml version="1.0" encoding="UTF-8"?>
<!--
    Common bean definitions.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    default-lazy-init="true"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!--
        Java class parent shorthand beans.
    -->
    <bean id="String" abstract="true" class="java.lang.String"/>
    <bean id="QName" abstract="true" class="javax.xml.namespace.QName"/>

    <!--
        File system and class path Resource parent shorthand beans.
        
        These are currently defined as Shibboleth resources, but will become
        Spring resources in Shibboleth MDA 0.9. The parent beans are named
        after the Spring Resource classes to ease migration later.
    -->
    <bean id="ClassPathResource" abstract="true" parent="component_parent"
        class="net.shibboleth.utilities.java.support.resource.ClasspathResource"/>
    <bean id="FileSystemResource" abstract="true" parent="component_parent"
        class="net.shibboleth.utilities.java.support.resource.FilesystemResource"/>
    
    <!--
        Shibboleth-defined Resource class parent bean.
        
        Note: this is named for the Spring-derived but Shibboleth-defined Resource
        class that will be included in Shibboleth MDA 0.9, to simplify migration.
    -->
    <bean id="HTTPResource" abstract="true"
        class="net.shibboleth.utilities.java.support.httpclient.HttpResource"/>

    <!--
        component_parent
        
        Parent for anything based on the Shibboleth component system.
        These all require initialization before use.
    -->
    <bean id="component_parent" abstract="true" init-method="initialize"/>
    
    <!--
        SimplePipeline
        
        Parent for pipelines.
    -->
    <bean id="SimplePipeline" abstract="true" parent="component_parent"
        class="net.shibboleth.metadata.pipeline.SimplePipeline"/>
    <!--
        stage_parent
        
        Parent for all stages.
    -->
    <bean id="stage_parent" abstract="true" parent="component_parent"/>
    
    <!--
        CompositeStage
        
        Parent for composite stages.
    -->
    <bean id="CompositeStage" abstract="true" parent="stage_parent"
        class="net.shibboleth.metadata.pipeline.CompositeStage"/>    

    <!--
        disassemble
        
        Split up any files that contain EntitiesDescriptors 
    -->
    <bean id="disassemble" class="net.shibboleth.metadata.dom.saml.EntitiesDescriptorDisassemblerStage">
        <property name="id" value="disassemble"/>
    </bean>

    <!--
    -->
    <bean id="removeInvalidContactPerson" class="net.shibboleth.metadata.dom.saml.ContactPersonFilterStage">
        <property name="id" value="removeInvalidContactPerson"/>
    </bean>
    
    <!--
    -->
    <bean id="removeOrganization" class="net.shibboleth.metadata.dom.saml.RemoveOrganizationStage">
        <property name="id" value="removeOrganization"/>
    </bean>
    
    <!--
    -->
    <bean id="createEntitiesDescriptor" class="net.shibboleth.metadata.dom.saml.EntitiesDescriptorAssemblerStage">
        <property name="id" value="createEntitiesDescriptor"/>
        <property name="descriptorName" ref="ts_federation_uri"/>
    </bean>
    
    <!--
    -->
    <bean id="generateContentReferenceId" class="net.shibboleth.metadata.dom.saml.GenerateIdStage">
        <property name="id" value="generateContentReferenceId" />
    </bean>

</beans>
